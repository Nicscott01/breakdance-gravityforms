{# Start with an empty list of selectors #}
{% set selectors = [] %}

{# If hide_labels is true, add the main label selector with exclusions #}
{% if design.form_elements.labels.hide_labels %}
    {# Start with the initial exclusion #}
    {% set exclusions = ['.bdgf-choice-label'] %}

    {# Check if there are additional exclusions and add them #}
    {% if design.form_elements.labels.exclusions is not empty %}
        {% for exclusion in design.form_elements.labels.exclusions %}
            {% set exclusions = exclusions | merge([exclusion.selector]) %}
        {% endfor %}
    {% endif %}

    {# Build the :not() selector string by concatenating each exclusion #}
    {% set not_selector = '' %}
    {% for exclusion in exclusions %}
        {% set not_selector = not_selector ~ ':not(' ~ exclusion ~ ')' %}
    {% endfor %}

    {% set selectors = selectors | merge(['%%SELECTOR%% .gfield_label' ~ not_selector]) %}
{% endif %}

{# If hide_complex_labels is true, add the complex label selector #}
{% if design.form_elements.labels.hide_complex_labels %}
    {% set selectors = selectors | merge(['%%SELECTOR%% .gform-field-label--type-sub']) %}
{% endif %}

{# Print the CSS if there are any selectors to hide #}
{% if selectors is not empty %}
    {{ selectors | join(', ') }} {
        border: 0;
        clip: rect(1px, 1px, 1px, 1px);
        -webkit-clip-path: inset(50%);
        clip-path: inset(50%);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        overflow-wrap: normal !important;
        word-wrap: normal !important;
        padding: 0;
        position: absolute !important;
        width: 1px;
    }
{% endif %}







{% if breakpoint == design.form_elements.vertical_at %}
	%%SELECTOR%% .gform-grid-row {
        flex-direction: column;
        flex-wrap: wrap;
    }

	%%SELECTOR%% .gfield_list_header {
 	     display:none;
	}
{% endif %}
    


{% if design.form_elements.radio_checkbox.layout == 'vertical' %}
  %%SELECTOR%% .gfield_radio,
  %%SELECTOR%% .gfield_checkbox {
    flex-direction: column;
	}


{% elseif design.form_elements.radio_checkbox.layout == 'horizontal' %}
  	%%SELECTOR%% .gfield_radio,
	%%SELECTOR%% .gfield_checkbox {
    	flex-direction: row;
	}
    %%SELECTOR%% .gfield_radio .gchoice,
    %%SELECTOR%% .gfield_checkbox .gchoice {
        width: auto;
    }

    %%SELECTOR%% .breakdance-form-radio:last-child,
    %%SELECTOR%% .breakdance-form-checkbox:last-child {
        margin-bottom: var(--bde-form-after-sublabel);
    }

{% endif %}

%%SELECTOR%% .gfield_radio,
%%SELECTOR%% .gfield_checkbox {
	gap: {{ design.form_elements.radio_checkbox.gap.style }};
}



%%SELECTOR%% .gfield .small  {
    width: {{ design.form_elements.inputs.width_small.style }};
}
%%SELECTOR%% .gfield .medium {
    width: {{ design.form_elements.inputs.width_medium.style }};
}
%%SELECTOR%% .gfield .large {
    width: {{ design.form_elements.inputs.width_large.style }};
}

{% if design.footer.button_alignment == 'left' %}

{% elseif design.footer.button_alignment == 'center' %}
%%SELECTOR%% .gform_footer,
%%SELECTOR%% .gform_page_footer {
	justify-content:center;
}
{% elseif design.footer.button_alignment == 'right' %}
%%SELECTOR%% .gform_footer,
%%SELECTOR%% .gform_page_footer {
	justify-content:flex-end;
}
{% endif %}


%%SELECTOR%% .gform_footer,
%%SELECTOR%% .gform_page_footer {
  gap: {{ design.footer.gap.style }};
}

%%SELECTOR%% {
{{ macros.spacing_margin_y(design.spacing) }}
}


%%SELECTOR%% .gfield {
  {{ macros.spacing_margin_y(design.form_elements.field_spacing) }}
}

%%SELECTOR%% .gform_validation_errors,
%%SELECTOR%% .gform_submission_error,
%%SELECTOR%% .gform_validation_error:not('.gform_wrapper') {
background-color: {{ design.form_elements.validation.container.background_color }};
  {{ macros.borders(design.form_elements.validation.container.borders) }}
  {{ macros.spacing_padding_all(design.form_elements.validation.container.padding) }}
}

%%SELECTOR%% .gform_validation_errors h2 {
{{ macros.typography(design.form_elements.validation.h2_messages, globalSettings) }}
}

%%SELECTOR%% .gform_validation_errors ol,
%%SELECTOR%% .gform_validation_errors li {
{{ macros.typography(design.form_elements.validation.list_items, globalSettings) }}
}

%%SELECTOR%% .gform_confirmation_message,
%%SELECTOR%% h2.gform_submission_error {
	{{ macros.typography(design.form_elements.confirmation.typography, globalSettings) }}
}


%%SELECTOR%% .validation_message:not(.validation_message--hidden-on-empty) {
	{{ macros.typography(design.form_elements.validation.messages.messages, globalSettings) }}
  background-color: {{ design.form_elements.validation.messages.background_color }};
  {{ macros.borders(design.form_elements.validation.messages.borders) }}
  {{ macros.spacing_padding_all(design.form_elements.validation.messages.padding) }}
  {{ macros.spacing_margin_y(design.form_elements.validation.messages.margin) }}
}

 
{{ macros.atomV1ButtonCss(design.footer.submit_button, 'breakdance-form-button__submit', '%%SELECTOR%%', breakpoint, globalSettings) }}
{{ macros.atomV1ButtonCss(design.footer.previous_button, 'gform_previous_button', '%%SELECTOR%%', breakpoint, globalSettings) }}
{{ macros.atomV1ButtonCss(design.footer.next_button, 'gform_next_button', '%%SELECTOR%%', breakpoint, globalSettings) }}
{{ macros.atomV1ButtonCss(design.footer.save_continue_button, 'gform_save_link', '%%SELECTOR%%', breakpoint, globalSettings) }}
        


{{ macros.atomV1ButtonCss(design.form_elements.radio_checkbox.de_select_all_button, 'gfield_choice_all_toggle', '%%SELECTOR%%', breakpoint, globalSettings) }}
    


{{ macros.atomV1ButtonCss(design.form_elements.list.add_button, 'add_list_item', '%%SELECTOR%%', breakpoint, globalSettings) }}
    

{{ macros.atomV1ButtonCss(design.form_elements.list.remove_button, 'delete_list_item', '%%SELECTOR%%', breakpoint, globalSettings) }}    

%%SELECTOR%% .gfield_list_icons {
  gap: {{ design.form_elements.list.gap.style }};
}

%%SELECTOR%% .gfield_list_group {
  margin-bottom: {{ design.form_elements.list.margin_bottom.style }};
}


{% if design.form_elements.radio_checkbox.radio_type == 'standard' %}

{% elseif design.form_elements.radio_checkbox.radio_type == 'blocks' %}
%%SELECTOR%% .gfield_radio {
  {{ macros.simpleLayout(design.form_elements.radio_checkbox.layout, breakpoint) }}
}


%%SELECTOR%% .breakdance-form-radio input {
    display:none;
  }

%%SELECTOR%% .breakdance-form-radio label {
  border:1px solid var(--bde-brand-primary-color);
  {{ macros.borders(design.form_elements.radio_checkbox.borders) }}
  padding:1rem 2rem !important;
  text-align:center;
  margin:0;
  {{ macros.typography(design.form_elements.radio_checkbox.typography, globalSettings) }}
}

%%SELECTOR%% .breakdance-form-radio input:checked + label {
  background-color:var(--bde-brand-primary-color);
  background-color: {{ design.form_elements.radio_checkbox.active.background_color }};
  color: #fff;
  {{ macros.typography(design.form_elements.radio_checkbox.active.typography, globalSettings) }}
  
}



{% endif %}


%%SELECTOR%% .gfield--type-choice .gfield_description  { 
  {{ macros.typography(design.form_elements.radio_checkbox.description.typography, globalSettings) }}
  {{ macros.spacing_margin_y(design.form_elements.radio_checkbox.description.spacing) }}

}


%%SELECTOR%% .gfield_radio,
%%SELECTOR%% .gfield_checkbox {
{{ macros.spacing_margin_y(design.form_elements.radio_checkbox.choices_spacing) }}
}


%%SELECTOR%% .gfield--input-type-multiselect .gfield_description {
  {{ macros.spacing_margin_y(design.form_elements.multiselect.description.spacing) }}
  {{ macros.typography(design.form_elements.multiselect.description.typography, globalSettings) }}
}

%%SELECTOR%% .ginput_container_multiselect {
  {{ macros.spacing_margin_y(design.form_elements.multiselect.choices_spacing) }}
}


%%SELECTOR%% .gfield_description {
{{ macros.typography(design.form_elements.labels.description_typography, globalSettings) }};
  {{ macros.spacing_margin_y(design.form_elements.labels.description_spacing) }};
}

%%SELECTOR%% {
	--bdgf-labels-primary-spacing-margin-bottom: {{ design.form_elements.labels.primary_spacing.margin_bottom.style }};
}


%%SELECTOR%% .breakdance-form-field__label {
  --bde-form-after-label: var(--bdgf-labels-primary-spacing-margin-bottom);
  margin-top: {{ design.form_elements.labels.primary_spacing.margin_top.style }};
  {{ macros.typography(design.form_elements.labels.primary_typography, globalSettings) }};
}

%%SELECTOR%% .breakdance-form-field__label.gform-field-label--type-sub, 
%%SELECTOR%% .gfield_description.instruction {
  margin-top: {{ design.form_elements.labels.sub_label_spacing.margin_top.style }};
  margin-bottom: {{ design.form_elements.labels.sub_label_spacing.margin_top.style }};
  {{ macros.typography(design.form_elements.labels.sub_label_typography, globalSettings) }};
}


%%SELECTOR%% .gf_progressbar {
  background-color: {{ design.progress_bar.background_color }};
  {{ macros.borders(design.progress_bar.borders) }};
  height: {{ design.progress_bar.height.style }};
}

%%SELECTOR%% .gf_progressbar .gf_progressbar_percentage {
  background-color:{{ design.progress_bar.progress_color }};
  {{ macros.typography(design.progress_bar.typography, globalSettings) }};
}


%%SELECTOR%% .gf_progressbar .gf_progressbar_percentage > span {
{{ macros.spacing_margin_x(design.progress_bar.text_margin) }};
}

%%SELECTOR%% .gf_progressbar_title {
 {{ macros.typography(design.steps.title_typography, globalSettings) }};
}

%%SELECTOR%% .gf_progressbar_title .gf_step_current_page,
%%SELECTOR%% .gf_progressbar_title .gf_step_page_count {
  {{ macros.typography(design.steps.steps_typography, globalSettings) }};
}

%%SELECTOR%% .gf_progressbar_title .gf_step_current_page {
  {{ macros.typography(design.steps.current_step_typography, globalSettings) }};
}


%%SELECTOR%% .gf_page_steps .gf_step_number {
  width: {{ design.numbered_steps.size.style }};
  height: {{ design.numbered_steps.size.style }};
  {{ macros.typography(design.numbered_steps.number_typography, globalSettings) }};
}

%%SELECTOR%% .gf_page_steps .gf_step_label {
{{ macros.typography(design.numbered_steps.label_typography, globalSettings) }};
  margin-left: {{ design.numbered_steps.label_margin_left.style }};
  
}


%%SELECTOR%% .gsection_title {
  {{ macros.typography(design.text.section_title.typography, globalSettings) }};
  {{ macros.spacing_margin_y(design.text.section_title.margin) }};
}


{% for item in design.text.html_field %}

	{% set selectors = item.selectors %}
	{% set selectorsArray = selectors | split(',') %}

    {% for selector in selectorsArray %}
%%SELECTOR%% .gfield--type-html {{ selector | trim }} {
	{{ macros.typography(item.typography, globalSettings) }};
  {{ macros.spacing_margin_y(item.margin) }};
}
    {% endfor %}
	
{% endfor %}


{% set button_order_count = 0 %}
{% for button in design.footer.button_order %}

	%%SELECTOR%% .{{ button }} {
      order: {{ button_order_count }};
	}

	{% set button_order_count = button_order_count + 1 %}

{% endfor %}


%%SELECTOR%% .gpnf-nested-entries {
  margin-bottom: var(--bdgf-labels-primary-spacing-margin-bottom);
}
